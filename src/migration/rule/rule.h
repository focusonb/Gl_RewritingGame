#pragma once
#include <map>
#include "../comStruct.h"

using namespace std;
using ChessPoint = ClickPoint;

bool is_win(ChessPoint& point_chess, MapPoint const *ptrchesses, const int& chess_width, bool myturn, const bool& gamegoingon);
bool check_row(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, bool&myturn);
bool Is_row_win(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, int i);
bool check_col(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, bool&myturn);
bool Is_col_win(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, int i);
bool check_obl(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, bool&myturn);
bool Is_obl_win(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, int i);
bool check_obl_a(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, bool&myturn);
bool Is_obl_win_a(ChessPoint& point_chess, MapPoint const* ptrchesses, const int& chess_width, int i);













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































